import java.time.LocalDate

plugins {
    id 'eclipse'
    id 'maven'
    id 'com.github.hierynomus.license' version '0.12.1'
    id 'com.diffplug.gradle.spotless' version '1.3.2'
    id 'org.spongepowered.plugin' version '0.6'
    id 'com.qixalite.spongestart' version '1.4.6'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

defaultTasks 'clean', 'build', 'shadowJar'

build {
    logger.lifecycle('MinigameCoreAPI: ' + project(':MinigameCoreAPI').version)
    logger.lifecycle('SpongeAPI: ' + project(':MinigameCoreAPI').spongeapi)
    def apifile = new File('apiver.txt')
    apifile.text = project(':MinigameCoreAPI').version.minus("-SNAPSHOT")
    def sapifile = new File('sapiver.txt')
    sapifile.text = project(':MinigameCoreAPI').spongeapi.minus("-SNAPSHOT")
}

repositories {
    maven {
        name 'JitPack'
        url 'https://jitpack.io'
    }
}

dependencies {
    compile 'org.spongepowered:spongeapi:' + project.spongeapi
    compile project(':MinigameCoreAPI')
}

spotless {
    java {
        importOrderFile 'gradle/spotless/order.importorder'
        eclipseFormatFile 'gradle/spotless/formatter.xml'
        custom 'Long literal fix', { it.replaceAll('([0-9_]+) [Ll]', '$1L') }
    }
}

license {
    ext {
        name = project.name
        organization = project.organization
        url = project.url
        inceptionYear = '2016'
        currentYear = LocalDate.now().getYear();
    }

    header = file('gradle/HEADER.txt')
    include '**/*.java'
}

spongestart {
    eula true
}

shadowJar {
    classifier 'all'
    baseName 'MinigameCore'
    version = null
    configurations = [project.configurations.compile]
    dependencies {
        include(dependency('io.github.minigamecore:MinigameCoreAPI'))
        include(dependency('com.google.guava:guava'))
    }
}
